#define F_CPU 16000000UL  // 16 MHz
#include <avr/io.h>
#include <util/delay.h>
#include <stdint.h>
#include <avr/interrupt.h>




uint16_t result;
uint8_t input;
int current_index = 6;
 
unsigned const int OCR_table[13] = {5, 25, 46, 66, 86, 107, 128, 148, 168, 188, 209, 229, 250};

int main(void){  
    
    
    DDRB = 0xFF;        //PORTB outputs 
    DDRD = 0x9F;        //5 first bits as output and the PD7 (last)
    PORTB = 0x00;
    PORTD = 0x00;
    

    // Initialize TMR1A in fast PWM 8-bit mode with non-inverted output
    // Prescaler = 1, to get 62.5kHz waveform in PB1
    //TCCR1A = (1 << WGM10) | (1 << COM1A1);
    //TCCR1B = (1 << CS10) | (1 << WGM12);
    TCCR1B = 0x0C;
    TCCR1A = 0x81;
    // I have deleted the (0 << ... ) i had in assembly code, non necessary ones


    /* Chose ADC channel (ADC1) to read from PB1_PWM, ends in ...0001
     * For voltage reference selection: REFS0 = 1, REFS1 = 0 
     * Right adjustment: ADLAR = 0
     * ADC1: MUX3 = 0, MUX2 = 0, MUX1 = 0, MUX0 = 1
     */
    ADMUX = (1 << REFS0) | (1 << MUX0);
    // Same as the above ADMUX = 0b01000001;
    
    /* Enable ADC: ADEN = 1
     * No conversion from analog to digital yet: ADSC = 0
     * Disable ADC interrupt: ADIE = 0 
     * Prescaler: f_ADC = 16MHz / prescaler and
     * 50kHz <= f_ADC <= 200kHz for 10-bits accuracy. So,
     * division factor = 128 -> gives f_ADC = 125kHz
     */ 
    ADCSRA = (1 << ADEN) | (1 << ADPS2) | (1 << ADPS1) | (1 << ADPS0); ;
    // Same as the above ADCSRA = 0b10000111;

    while(1)
    {
        int counter = 0;
        result = 0;
        while (counter!=16)
        {
            input = ~PIND;
            input = (input & 0x60);
            
            OCR1AL = OCR_table[current_index];

            if(input == 0x60) continue;
            else if ((input == 0x20) && (current_index != 0)) { //lower if pd5
                current_index--;
                //PORTC = OCR_table[current_index];
                OCR1AL = OCR_table[current_index];
            }
            else if ((input == 0x40) && (current_index != 12)){ //higher if pd6 is pressed
                current_index++;
                //PORTC = OCR_table[current_index];
                OCR1AL = OCR_table[current_index];
            }
                      
            _delay_ms(100);
                
            ADCSRA |= 0x40;                 //start ADC
            while((ADCSRA&0x40)!= 0x00){}   //while ?he conversion last hold fast
            result = result + ADC;
            
            counter++;
        }
        
        result = (result >> 4);
        
        if ((result >= 0) && (result <= 200)) PORTD = 0x01;
        else if (result <= 400) PORTD = 0x02;
        else if (result <= 600) PORTD = 0x04;
        else if (result <= 800) PORTD = 0x08;
        else PORTD = 0x10;    
            
    }
}